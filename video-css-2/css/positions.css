/* 
Posicionamiento en CSS
Las propiedades FLOAT y POSITIONS nos permiten modificar la posición natural 
de cualquier elemento del documento HTML

El navegador coloca cada elemento teniendo en cuenta el orden en el que aparece 
en el documento y su tipo de visualización dependiendo si es un elemento de linea 
o de bloque.

Con FLOAT y POSITION podemos modificar este comportamiento.

Elementos flotantes
- float: Convierte un elemento en flotante desplazándolo hasta la zona más a la
izquierda o más a la derecha de la posición en la que originalmente se encontraba.
-clear: Limpia la flotación (left, right, both)

Tipos de Posicionamiento:
-static (default)
-relative
-absolute
-fixed
-sticky -> pegajoso

Para mover los elementos posicionados se activan las propiedades: 
-top(vertical - eje Y)
-bottom(vertical - eje Y)
-left(horizontal - eje X)
-right(horizontal - eje X)
-z-index(profundidad - eje Z)

Las propiedades top y left van a tener preferencia por sobre bottom y right respectivamente.

Estas 5 propiedades no funcionan con el valor de static

*/
.static {
    background-color: aquamarine;
    position: static; /* es el posicionamiento que tiene por defecto, no se moverá */
}

.relative {
    background-color: cadetblue;
    position: relative; /* no pierde sus dimenciones */
    left: 50px; /* de la posición original, se alejan de acuerdo a su margen */
    top: -20px; /* al ser negativo ahi si sube */
    width: 400px;
    top: 30px; /* se sobreescribe por cascada */
}

/* Absolute: 
El elemento pierde sus dimensiones y posición original en
el flujo del documento. Si se mueve puede tomar como 
referencia 2 elementos:
1- El primer ancestro con posicionamiento relativo
2- Si no encuentra un ancestro relativo, 
se mueve respecto del documento HTML

*/

.absolute {
    background-color: tomato;
    position: absolute;
    width: 200px;
    height: 40px;
    /* top: 0;
    left: 0; */
    right: 0;
}

.relative-parent {
    background-color: darkgray;
    width: 600px;
    height: 40px;
    top: 0;
}

.absolute-child {
    background-color: khaki;
    position: absolute;
    left: 0;
   /*  top: 0; */
}

/* Posicionamiento fijo
El elemento pierde sus dimenciones y posición original en el
flujo del documento. Si se mueve toma como referencia el documento 
HTML, y queda fijo en la posición, cuando el scroll se mueva,
el elemento no lo hará, quedará fijo.
*/

.fixed {
    background-color: darkolivegreen;
    position: fixed; 
    width: 300px;
    height: 100px;
    right: 50px; 
    bottom: 40px;
    top: 30px;
    left: 400px;
}

/* Posicionamiento sticky:
Es una combinación de posicionamiento relative y fixed, 
para este posicionamiento las propiedades de top, bottom, right y left
no mueven el elemento, sirven como un punto de referencia,
mientras no lleguen a ese valor el elemento se comporta como
relative, cuando llega se convierte en fixed.
Para que este comportamiento funcione el elemento sticky 
debe ser hijo directo del body o su elemento contenedor 
debe tener dimenciones definidas y sólo será sticky dentro
de las dimensiones de su contenedor padre.
(entonces es dinámico pero también puede quedar fijo)
*/

.sticky {
    background-color: lightslategray;
    position: sticky;
    top: 50px;
}

.sticky-parent {
    border: thin dashed black;
    height: 400px;
}

.sticky-child {
    background-color: lightblue;
    position: sticky;
    top: 75px;
}

/* 
Z-Index: propiedad que permite controlar la profundidad
de los elementos posicionados, su valor por defecto es auto,
acepta números positivos, negativos y cero.
A mayor valor el elemento esta más al frente, 
a menor valor más al fondo.
Un elemento padre nunca podrá estar sobre sus elementos hijos, 
sin embargo los elementos hijos si pueden dándoles un valor negativo
y que el elemento padre no tenga definido valor de z-index
*/

.z-index-1,
.z-index-2 {
    background-color: grey;
    border: thin solid black;
    position: relative;
    width: 200px;
    height: 200px;
}

.z-index-1 {
    z-index: 1;
}

.z-index-2 {
    top: 200px;
    left: 100px;
    z-index: 2;
}

.z-index-parent {
    background-color: mediumorchid;
    width: 300px;
    height: 300px;
    position: relative;
   /*  z-index: 2;  comentando esta linea en el padre, ahi si el hijo se pondra detras del elemento padre*/
}

.z-index-child {
    background-color: mediumpurple;
    position: relative;
    width: 150px;
    height: 150px;
    top: -75px;
    left: 150px;
    z-index: 3; /* si es negativo, el hijo quedara atras */
}
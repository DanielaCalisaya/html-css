/* Regla CSS consta de 2 partes

1- Selector: es el bloque html al que nosotros podemos aplicarle esos estilos 
2- Bloque de declaraciones: {   -> cada uno de los atributos que vamos a modificar 
    atributo: valor;
    atributo-de-mas-de-dos-palabras: otro-valor  ->así lo escribiríamos
}
*/

/* h1 {
    color: aqua;
    background-color: skyblue;
} */

/* Son mala práctica porque son bloqueantes a la hora de que el navegador lea esta instrucción */
@import url("otra-hoja.css");

/* 3 selectores básicos:
1- Etiquetas : elementos html
2- Identificadores : atributo id #
3- Clases : atributo class . 
*/

/*p {  toma todos los párrafos que encuentra 
    background-color: steelblue;
}*/

/* dar estilos con id es una mala práctica, además que tienen un mayor peso */
#parrafo-dos {
    background-color: blueviolet;
}

/* maquetar y diseñar con clases, son reutilizables, que hagan referencia a lo que corresponde */
.bg-skyblue {
    background-color: skyblue;
}

.bg-steelblue {
    background-color: steelblue;
}

.text-20 {
    font-size: 20px;
}

.text-32 {
    font-size: 32px;
}

.text-white {
    color: white;
}

/* hijos directos, aplican a los de primer nivel, b seria nieta no hija directa */
.hijos-directos > li {  
    background-color: thistle;
}

.hijos-descendientes b {
    background-color: thistle;
}

/* van a aplicar a los selectores que son hermanos(a todos pero los que están debajo), a los que estén por debajo del elemento de referencia */
.hermanos-general ~ li { /* para la tilde alt gr + la tecla que lo contiene */
    background-color: thistle;
}

/* le aplica el estilo al que sigue , en este caso a otoño, no a verano */
.hermanos-adyacentes + li {
    background-color: thistle;
}

/* selectores de atributo, nos van a permitir  */
.selectores-atributos a[href] { /* seleccionando por atributo, todos los que tengan href aplicará */
    color: olivedrab;
}

.selectores-atributos a[target="_black"] {
    font-weight: bold;
}

.selectores-atributos a[href*="jonmircha"] { /* el comodin del * aplica el estilo si tiene el texto en cuestion en cualquier parte */
    font-size: 24px;
}

.selectores-atributos a[href^="http"] { /* el comodin del ^ aplica el estilo si contiene el texto en cuestion al principio */
    text-decoration: none;  /* alt gr + la tecla del ^(circunflejo: presionando dos veces) */
}

.selectores-atributos a[href$=".com"] { /* el comodin del $ aplica el estilo si contiene el texto en cuestion al final */
    background-color: yellow; 
}

.selectores-atributos a [class~="cursos"] { /* el comodin del ~ aplica el estilo si contiene el texto en cuestion en una lista separada por espacios, (clases) */
    background-color: rgb(87, 205, 238);  /* <- no funciona */
}

.selectores-atributos a [class|="menu"] { /* el comodin del | aplica el estilo si contiene el texto en cuestion en una lista separada por espacios y que despues de ese texto venga un guión medio */
    font-style: italic;
}

/* Selector universal, aplicará a todos los elementos del html */
* {
    font-family: sans-serif;
}

.selector-universal * { /* dentro de la clase elige a todos los que estan dentro */
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif
}

/* 
Pseudo-clases - Dan estilo dependiendo el contexto, la posicion o estado del elemento 
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes
*/
.form-pseudoclases *:required { /* segun el estado, osea debe ser el q está requerido y empiezan con dos puntos las pseudoclases */
    border-color: skyblue;
}

.form-pseudoclases *:valid {
    border-color: green;
}

.form-pseudoclases *:invalid { /* en el caso de email, espera un arroba, si no hay nada escrito, o no hay un arroba estará rojo */
    border-color: red;
}

.form-pseudoclases *:focus {
    border-color: blue;
}

.form-pseudoclases *:disabled {
    border-color: pink;
}

.menu-pseudoclases a:visited { /* esta clase tiene que ir arriba para que no inhabilite el estado hover */
    /* para los enlaces que son visitados */
    color: olive;
}

.menu-pseudoclases a:hover {
    /* aplica para cualquier elemento */
    color: orange;
}

.p-pseudoclases:hover {
    font-size: 30px;
}

#temario-css:target { /* cuando tenga en la url el target activo */
    background-color: lightpink;
}

.lista-pseudoclases li:first-child { /* tenemos 12 li, pero se selecciona al primer hijo */
    color: aqua;
}

.lista-pseudoclases li:last-child { /* selecciona al ultimo hijo */
    color: violet;
}

/* nth */
.lista-pseudoclases li:nth-child(3) { /* cambia el tercer elemento */
    color: navy;
}

.lista-pseudoclases li:nth-child(4n) { /* de 4 en 4 aplica tal estilo */
    font-size: 25px;
}

.lista-pseudoclases li:nth-child(3n + 1) { /* de 3 en 3 aplica tal estilo mas 1 */
    font-weight: bold;
}


.lista-pseudoclases li:nth-child(even) { /* even: pares */
    background-color: lightpink;
}

.lista-pseudoclases li:nth-child(odd) { /* odd: impares */
    background-color: lightskyblue;
}

.articulo-pseudoclases p:first-child { /* no toma al primer parrafo, porque el primer hijo es header */
    background-color: brown;
}

.articulo-pseudoclases p:first-of-type { /* toma el primero en su tipo */
    background-color: brown;
}

.articulo-pseudoclases p:last-of-type { /* toma el ultimo en su tipo */
    background-color: brown;
}

.articulo-pseudoclases p:nth-of-type(3) { /* toma el tercero en este caso */
    background-color: fuchsia;
}

.articulo-pseudoclases *:not(p, .boton ) { /* negacion: afectan a todos, menos los párrafos y por ejemplo alguna con clase también */
    background-color: beige;
}

/* pseudoelementos - dan estilos a partes especificas de un elemento,
se usa el :: para diferenciarlos de las pseudoclases
(la buena practica es con dos dos puntos, los navegadores modernos aceptan con uno solo)
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-elements
*/

/* after y before */
.tela-clase::before { /* antes... siempre en after y before es necesario agregarle el content */
    content: "✂";
}

.tela-clase::after { /* después...  */
    content: "❤";
}

.precio::before { 
    content: "$";
    font-weight: bold;
}

.precio::after { 
    content: " Pesos";
    font-weight: bold;
}

.p-pseudoelementos::first-letter {
    font-weight: bold;
    font-size: 32px;
}

.p-pseudoelementos::first-line {
    background-color: lightblue;
}

.p-pseudoelementos::selection {
    color: yellow;
    background-color: black;
}

.input-pseudoelementos::placeholder { /* estamos seleccionando un atributo y a ese lo modificamos */
    color: darkslateblue;
}
html {
    box-sizing: border-box;
    font-family:Georgia, 'Times New Roman', Times, serif;
    font-size: 16px;
}

*, 
*::after,
*::before {
    box-sizing: inherit;
}

.box {
    width: 200px;
    height: 200px;
    border: thick solid #000;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 4rem;
}

.card {
    width: 600px;
    height: 400px;
    border: thick solid #000;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 5rem;
}

.card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 0 50%; /* que empieze en cero del lado izquierdo */
}

/* Transiciones
    transition-property
    transition-duration cuanto dura
    transition-timing-function: none linear ease ease-in ease-out ease-in-out steps
    transition-delay un tiempo de espera antes que comience nuestra transicion
    transition: property duration timing-function delay

*/

.transitions .box {
    background-color: magenta;
    transition-property: background-color;
    transition-duration: 500ms;
    transition-timing-function: ease;
    transition-delay: 0.5s;
    transition: border-color 2s linear 1s; /* aquí por cascada lo anterior se reemplaza */
    transition: all 2s ease-in-out 250ms; 
    /* todas las propiedades que sean animables aplica estilo, en este caso son pocas */
}

.transitions .box:hover {
    background-color: cyan;
    border-color: red;
    border-radius: 2rem;
    /* border-style: dotted; no es una propiedad animable*/
}

.transitions .card {
    /* transition: all 2s ease; esto seria para todas*/
    transition: opacity 1s ease-out,
        border-color 3s steps(3),/* lo hará en pasos */
        filter 2s ease-in 1s,
        box-shadow 1.5s linear 2s;
    }

.transitions .card:hover {
    opacity: .75;
    border-color: orchid;
    filter: blur(0.rem);
    box-shadow: 1rem 1rem 2rem 0.5rem #000;
}

.transitions .card img {
    transition: object-position 2s ease-in 3s;
}

.transitions .card img:hover {
    object-position: 100% 50%;
}